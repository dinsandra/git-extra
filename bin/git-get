#!/bin/bash
if [ "$#" -lt 1 ]; then
  echo "Must have branch name"
  exit 1
fi

remote=$(git config --get gitset.defaultremote)
branch_prefix=$(git config --get gitset.branchPrefix)

if [[ -z "${remote}" ]]; then
  echo "No remote configured. Use 'git config --global gitset.defaultremote <remotename>' to set default remote"
  exit 1
fi

force=false
branch=""
interactive=false

while [[ $# -gt 0 ]]; do
  case ${1} in
    -f|--force)
    force=true
    shift
    ;;
    -i)
    interactive=true
    shift
    ;;
    *)
    if [[ -n "${branch}" ]]; then
      echo "Multiple branches specified" >&2
      exit 2
    fi
    branch=${1}
    shift
    ;;
  esac
done

if [[ "${force}" != "true" ]]; then
  uncommitted_changes=$(git status --porcelain=v2 | grep -e "^[12] ")
  if [[ "${uncommitted_changes}" != "" ]]; then
    echo "Uncommited changes present! Use --force/-f to override" >&2
    exit 3
  fi

  remote_refs=$(git show-ref | grep refs/remotes/ | grep "$(git rev-parse HEAD)")
  if [[ "${remote_refs}" == "" ]]; then
    echo "No remote branch tracking HEAD, this would lose data. Use --force/-f to override" >&2
    exit 3
  fi
fi

if [[ "${interactive}" == true ]]; then
  branches=$(git branches)
  echo "${branches}"

  IFS=$'\n' read -rd '' -a lines <<<"${branches}"
  if [[ "${#lines[@]}" -eq 0 ]]; then
    echo "No matching remote branches"
    exit 0
  fi

  for ((i=0; i < ${#lines[@]}; i++)); do
    echo "[$((i+1))]: ${lines[${i}]}"
  done

  echo "Select branch: [q/0-9+]"
  read -r -p "> " selected_branch

  if [[ "${selected_branch}" == "q" ]]; then
    exit 0
  fi
  if [[ -z "${selected_branch}" ]] \
     || [[ "${selected_branch}" -lt 1 ]]\
     || [[ "${selected_branch}" -gt "${#lines[@]}" ]]; then
    echo "Invalid option" >&2
    exit 1
  fi

  branch=${lines[selected_branch - 1]}
fi

if [[ -z "${branch}" ]]; then
  echo "No branch specified" >&2
  exit 1
fi

git reset --hard "refs/remotes/${remote}/${branch_prefix}${branch}"
