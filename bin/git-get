#!/bin/bash
if [ "$#" -lt 1 ]; then
  echo "Must have branch name"
  exit 1
fi

REMOTE=$(git config --get gitset.defaultremote)
BRANCH_PREFIX=$(git config --get gitset.branchPrefix)

if [[ -z "${REMOTE}" ]]
then
  echo "No remote configured. Use 'git config --global gitset.defaultremote <remotename>' to set default remote"
  exit 1
fi

FORCE=false
BRANCH=""
INTERACTIVE=false

while [[ $# -gt 0 ]]
do
  case ${1} in
    -f|--force)
    FORCE=true
    shift
    ;;
    -i)
    INTERACTIVE=true
    shift
    ;;
    *)
    if [[ -n "${BRANCH}" ]]
    then
      echo "Multiple branches specified" >&2
      exit 2
    fi
    BRANCH=${1}
    shift
    ;;
  esac
done

if [[ "${FORCE}" != "true" ]]
then
  UNCOMMITTED_CHANGES=$(git status --porcelain=v2 | grep -e "^[12] ")
  if [[ "${UNCOMMITTED_CHANGES}" != "" ]]
  then
    echo "Uncommited changes present! Use --force/-f to override" >&2
    exit 3
  fi

  REMOTE_REFS=$(git show-ref | grep refs/remotes/ | grep $(git rev-parse HEAD))
  if [[ "${REMOTE_REFS}" == "" ]]
  then
    echo "No remote branch tracking HEAD, this would lose data. Use --force/-f to override" >&2
    exit 3
  fi
fi

if [[ "${INTERACTIVE}" == true ]]
then
  BRANCHES=$(git branches)
  echo "${BRANCHES}"

  IFS=$'\n' read -rd '' -a LINES <<<"${BRANCHES}"
  if [[ "${#LINES[@]}" -eq 0 ]]; then
    echo "No matching remote branches"
    exit 0
  fi

  for ((i=0; i < ${#LINES[@]}; i++)); do
    echo "[$((i+1))]: ${LINES[${i}]}"
  done

  echo "Select branch: [q/0-9+]"
  read -p "> " SELECTED_BRANCH

  if [[ "${SELECTED_BRANCH}" == "q" ]]; then
    exit 0
  fi
  if [[ -z "${SELECTED_BRANCH}" ]] \
     || [[ "${SELECTED_BRANCH}" -lt 1 ]]\
     || [[ "${SELECTED_BRANCH}" -gt "${#LINES[@]}" ]]; then
    echo "Invalid option" >&2
    exit 1
  fi

  BRANCH=${LINES[SELECTED_BRANCH - 1]}
fi

if [[ -z "${BRANCH}" ]]
then
  echo "No branch specified" >&2
  exit 1
fi

git reset --hard "refs/remotes/${REMOTE}/${BRANCH_PREFIX}${BRANCH}"
